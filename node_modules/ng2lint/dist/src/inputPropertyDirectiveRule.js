"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var propertyClassBase_1 = require("./propertyClassBase");
var decoratorValidator_1 = require('./util/decoratorValidator');
var FAILURE_STRING = 'In the class "%s", the directive input property "%s" should not be renamed.' +
    'Please, consider the following use "@Input() %s: string"';
var renameInputCondition = function (name, arg) {
    return (name === 'Input' && arg);
};
var Rule = (function (_super) {
    __extends(Rule, _super);
    function Rule(ruleName, value, disabledIntervals) {
        _super.call(this, ruleName, value, disabledIntervals, decoratorValidator_1.decoratorValidator(renameInputCondition), FAILURE_STRING);
    }
    return Rule;
}(propertyClassBase_1.ClassParameterRule));
exports.Rule = Rule;
